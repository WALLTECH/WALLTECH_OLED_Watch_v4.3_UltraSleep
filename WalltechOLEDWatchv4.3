/***************************************************
 * ___       __   ________  ___       ___   _________  _______   ________  ___  ___     
 * |\  \     |\  \|\   __  \|\  \     |\  \ |\___   ___\\  ___ \ |\   ____\|\  \|\  \    
 * \ \  \    \ \  \ \  \|\  \ \  \    \ \  \\|___ \  \_\ \   __/|\ \  \___|\ \  \\\  \   
 *  \ \  \  __\ \  \ \   __  \ \  \    \ \  \    \ \  \ \ \  \_|/_\ \  \    \ \   __  \  
 *   \ \  \|\__\_\  \ \  \ \  \ \  \____\ \  \____\ \  \ \ \  \_|\ \ \  \____\ \  \ \  \ 
 *    \ \____________\ \__\ \__\ \_______\ \_______\ \__\ \ \_______\ \_______\ \__\ \__\
 *     \|____________|\|__|\|__|\|_______|\|_______|\|__|  \|_______|\|_______|\|__|\|__|
 * 
 * This is the default code for the Walltech OLED Watch v4.2
 * 
 * Designed specifically to work with the Walltech OLED Watch v4.2:
 * ----> http://wp.me/P4qDhv-fm
 * 
 * Walltech invests time and resources providing this open source code, 
 * please support Walltech and open-source hardware by donating any amount!
 * https://www.paypal.com/us/cgi-bin/webscr?cmd=_flow&SESSION=LrIWifBuf102Rn7Ang7qJLttsEWICxRtd9iYW6zG0OBBt_zN2z6srd7XQXa&dispatch=5885d80a13c0db1f8e263663d3faee8d6cdb53fcfca2b5941339e576d7e42259
 * 
 * Written by John Wall for Walltech.  
 * BSD license, all text above must be included in any redistribution
 * 
 * Creative Commons License
 * This work by Walltech Industries is licensed
 * under a Creative Commons Attribution-ShareAlike 4.0 International License.
 * Largely based on a work at http://www.arduino.cc
 ****************************************************/

#include <Wire.h>// Including the necessary libraries, if you don't have one, google it, it should come up
#include <GOFi2cOLED.h>// This library can be found here - http://www.geekonfire.com/wiki/index.php?title=I2C_OLED_Panel(128x64)
#include "RTClib.h"
#include "Adafruit_MCP9808.h"

GOFi2cOLED GOFoled;// instantiating constructors 
RTC_DS1307 RTC;
// Create the MCP9808 temperature sensor object
Adafruit_MCP9808 tempsensor = Adafruit_MCP9808();

byte PROGMEM lbtn = 4;// naming the button pins
byte PROGMEM cbtn = 2;
byte PROGMEM rbtn = A1;

byte timehour;// declaring all program variables
byte timeminute;
byte timesecond;
byte lastsecond;
int timemillisecond;

byte buttonState_l;
byte buttonState_c;
byte buttonState_r;

byte PROGMEM charge = 3;
byte PROGMEM full = A3;
byte brightness = 0;// how bright the charging LED is
byte fadeAmount = 5;// how many points to fade the charging LED by
byte ledstate = LOW;
int lipostat;//Charge status
byte percent;

float f;

int value = LOW;// previous value of the LED
int PROGMEM stopwatchblink = 1000;
int stopButtonState;
int laststopButtonState;// variable to store last button state
byte blinking;// condition for blinking - timer is timing
long previousMillis = 0;// variable to store last time LED was updated
long startTime;// start time for stop watch
long elapsedTime;// elapsed time for stop watch
long runningTime;
int fractional;// variable used to store fractional part of time
byte hours;
byte minutes;
byte seconds;
long previousmillisseconds;

byte setminute;
byte sethour;

long PROGMEM interval = 333;

byte face = 1;
byte PROGMEM facenum = 9;

byte brightnessLevel = 4;
long fadeMillis;

byte A = 1;
byte B = 1;
byte C = 1;
byte D = 1;
// these are all the program's bitmap images. Use this convertor to make your own: http://www.majer.ch/lcd/adf_bitmap.php

const unsigned char walltech2 [] PROGMEM =
{
  0x03, 0x0F, 0x7F, 0xFF, 0xFF, 0xF8, 0xE0, 0x00, 0x00, 0xC0, 
  0xF8, 0xFE, 0xFF, 0x7F, 0x7F, 0xFF, 0xFE, 0xF8, 0xC0, 0x00, 
  0x00, 0xE0, 0xF8, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x80, 0xC0, 
  0xF0, 0xF8, 0xFE, 0x7F, 0x1F, 0x1F, 0x7F, 0xFE, 0xF8, 0xF0, 
  0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x00, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0x00, 0xFE, 0xFF, 0xFF, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x01, 
  0x0F, 0x3F, 0x7F, 0x7F, 0x7F, 0x7F, 0x1F, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x1F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x0F, 
  0x61, 0x70, 0x7C, 0x7E, 0x7F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1F, 0x7F, 0x7E, 0x7C, 
  0x70, 0x60, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x70, 0x70, 0x70, 
  0x70, 0x70, 0x70, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x70, 0x70, 
  0x70, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x71, 
  0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
  0x71, 0x00, 0x3F, 0x7F, 0x7F, 0x70, 0x70, 0x70, 0x70, 0x70, 
  0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x7F, 0x7F, 
  0x7F, 0x7F
};

// imageWidth 3
// imageHeight 21

const unsigned char fontcolon [] PROGMEM=
{
  0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C
};

// imageWidth 25
// imageHeight 28

const unsigned char font0 [] PROGMEM=
{
  0x00, 0x80, 0xE0, 0xF0, 0x38, 0x1C, 0x0E, 0x06, 0x07, 0x03, 
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x06, 0x0E, 0x1C, 
  0x38, 0xF0, 0xE0, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 
  0x00, 0x1F, 0x7F, 0xF0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 
  0xC0, 0xF0, 0x7F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0x03, 0x07, 0x06, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 
  0x0C, 0x0E, 0x06, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00
};

const unsigned char font1 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03,
  0x03, 0x03, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char font2 [] PROGMEM=
{
  0xF0, 0xFC, 0x1E, 0x0E, 0x07, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x07, 0x0E, 0xFC, 0xF8, 0x00, 0x00, 0x80, 0x80, 0x80,
  0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60,
  0x70, 0x30, 0x30, 0x30, 0x38, 0x38, 0x1C, 0x1E, 0x0F, 0x03,
  0xFC, 0xFF, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C
};

const unsigned char font3 [] PROGMEM=
{
  0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0xFE,
  0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0E, 0x0F, 0x1F, 0x39, 0x70, 0xE0, 0xE0, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0xC0, 0xFF, 0x7F, 0x00, 0x08, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, 0x01, 0x01, 0x00
};

const unsigned char font4 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0x3C,
  0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xF8, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0x7C,
  0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00
};

const unsigned char font5 [] PROGMEM=
{
  0x00, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x1C, 0x18, 0x38, 0xF0, 0xE0, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xC0, 0xFF, 0x7F, 0x00, 0x00, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0E, 0x06, 0x07, 0x03, 0x01, 0x00, 0x00
};

const unsigned char font6 [] PROGMEM=
{
  0x00, 0x00, 0x80, 0xE0, 0xF0, 0x78, 0x1C, 0x1C, 0x0E, 0x06,
  0x07, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xF3, 0x38,
  0x18, 0x1C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x1C, 0x18, 0x38, 0xF0, 0xE0, 0x80, 0x00,
  0x00, 0x7F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xC0, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07,
  0x06, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0E, 0x06, 0x07, 0x03, 0x01, 0x00, 0x00
};

const unsigned char font7 [] PROGMEM=
{
  0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xC3,
  0xF3, 0x7F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0xE0, 0xF8, 0x3E, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0xC0, 0xF0, 0x7C, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x08, 0x0E, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char font8 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0xFC, 0xFE, 0x07, 0x07, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x07,
  0xFE, 0xFC, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0x39, 0x1F,
  0x1F, 0x0E, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0E, 0x0E, 0x1F, 0x1F, 0x39, 0xF0, 0xE0, 0x80,
  0x7F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xC0, 0xFF, 0x7F, 0x00, 0x01, 0x03, 0x07, 0x06,
  0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
  0x0C, 0x0C, 0x0C, 0x0C, 0x0E, 0x06, 0x07, 0x03, 0x01, 0x00
};

const unsigned char font9 [] PROGMEM=
{
  0x00, 0xE0, 0xF8, 0x3C, 0x0E, 0x06, 0x07, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x06,
  0x0E, 0x3C, 0xF8, 0xE0, 0x00, 0x00, 0x1F, 0x7F, 0xF0, 0xC0,
  0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x80, 0xC0, 0xF0, 0xFF, 0xFF, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x83, 0x83, 0xE1,
  0xF1, 0x7C, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0E,
  0x06, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00
};
//blinds font
//imageWidth 22
//imageHeight 64

const unsigned char blind0 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind1 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char blind2 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 
  0xE0, 0xE0, 0xE0, 0xE0, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind3 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind4 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind5 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind6 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind7 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind8 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

const unsigned char blind9 [] PROGMEM=
{
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x8F, 0x8F, 0x8F, 0x8F, 
  0x8F, 0x8F, 0x8F, 0x8F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x7E, 0x7E, 0x7E, 0x7E, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 
  0xE3, 0xE3, 0xE3, 0xE3, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07
};

//imageWidth 8
//imageHeight 64

const unsigned char blindcolon [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 
  0x03, 0x03, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
  0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

// imageWidth 72
// imageHeight 16

const unsigned char one [] PROGMEM=
{
  0x00, 0xF8, 0xFC, 0x0E, 0x07, 0x03, 0x03, 0x03, 0x03, 0x07, 
  0x1E, 0xFC, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x18, 
  0x18, 0x18, 0x18, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xE0, 
  0xF0, 0xB8, 0x98, 0x98, 0x98, 0xB8, 0xF0, 0xE0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x0C, 0x18, 0x18, 0x18, 
  0x18, 0x0C, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1F, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 0x0C, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char two [] PROGMEM=
{
  0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 
  0x03, 0x00, 0x00, 0x18, 0xF8, 0xF0, 0x00, 0x80, 0xF0, 0x78, 
  0xF8, 0xE0, 0x00, 0xC0, 0xF8, 0x38, 0x00, 0x00, 0x00, 0xE0, 
  0xF0, 0x38, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 
  0x03, 0x00, 0x01, 0x0F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x0F, 0x0E, 0x18, 0x18, 0x18, 0x0C, 0x0F, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char three [] PROGMEM=
{
  0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 
  0x03, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 
  0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x18, 
  0x18, 0x18, 0x08, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 
  0x98, 0x98, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 
  0x98, 0x98, 0x98, 0x98, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 
  0x0D, 0x19, 0x19, 0x19, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x03, 
  0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x0D, 0x0D, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char four [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x03, 
  0x00, 0x00, 0x00, 0xE0, 0xF0, 0x18, 0x18, 0x18, 0x18, 0xF8, 
  0xF0, 0xC0, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 
  0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 
  0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0C, 0x18, 0x18, 
  0x1C, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x0F, 
  0x18, 0x18, 0x08, 0x0C, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char five [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x03, 
  0x00, 0x00, 0x00, 0xFB, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x18, 
  0x78, 0xF0, 0xC0, 0x00, 0x00, 0xE0, 0xF8, 0x38, 0x00, 0x00, 
  0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 0x98, 0x98, 0xF0, 0xE0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x0F, 0x1E, 0x0F, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 
  0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char six [] PROGMEM=
{
  0x00, 0x1C, 0x3E, 0x77, 0x63, 0x63, 0xE3, 0xE3, 0xE3, 0xC7, 
  0x86, 0x00, 0x00, 0x00, 0x00, 0xF3, 0xF3, 0x00, 0x00, 0x00, 
  0x00, 0x08, 0x38, 0x78, 0xE0, 0xC0, 0xE0, 0x70, 0x38, 0x18, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0E, 0x0C, 0x0C, 0x18, 0x18, 0x18, 0x18, 
  0x0C, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x07, 0x0F, 
  0x1C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char seven [] PROGMEM=
{
  0x00, 0x1C, 0x3E, 0x77, 0x63, 0x63, 0xE3, 0xE3, 0xE3, 0xC7, 
  0x86, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xF0, 0x98, 0x98, 0x98, 
  0x98, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x18, 0x78, 0xF0, 0xC0, 
  0x00, 0x00, 0xE0, 0xF8, 0x38, 0x00, 0x00, 0x00, 0xC0, 0xF0, 
  0xF0, 0x98, 0x98, 0x98, 0x98, 0xF0, 0xF0, 0x00, 0x00, 0x00, 
  0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0E, 0x0C, 0x0C, 0x18, 0x18, 0x18, 0x18, 
  0x0C, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0D, 
  0x19, 0x19, 0x19, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0x0F, 0x1E, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x0D, 0x0D, 0x00, 
  0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char eight [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
  0x00, 0x00, 0x00, 0x00, 0xF3, 0xF3, 0x03, 0x00, 0x00, 0x00, 
  0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF8, 0x00, 
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x38, 0x18, 0x18, 0x18, 0xF8, 
  0xF0, 0xC0, 0x00, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0x18, 0x18, 
  0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x18, 0x18, 0x18, 0x18, 
  0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x6F, 0xEE, 0xD8, 0xD8, 0xC8, 0x6C, 0x7F, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x0F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 
  0x1C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};


const unsigned char nine [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x0F, 0x3E, 0xF8, 0xE0, 0x80, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF3, 0xF3, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 
  0xF0, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 
  0x98, 0xB8, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x03, 
  0x0F, 0x1F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0D, 
  0x19, 0x19, 0x19, 0x19, 0x0D, 0x0C, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char ten [] PROGMEM=
{
  0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 
  0x03, 0x00, 0x00, 0xC0, 0xF0, 0xF0, 0x98, 0x98, 0x98, 0x98, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x18, 0x18, 
  0x18, 0x18, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0D, 0x19, 
  0x19, 0x19, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char eleven [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
  0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0xF0, 0xB8, 0x98, 0x98, 0x98, 0x98, 0xF0, 0xE0, 0x00, 
  0x00, 0x00, 0x18, 0x78, 0xF0, 0xC0, 0x00, 0x00, 0xE0, 0xF8, 
  0x38, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 0x98, 
  0x98, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x18, 
  0x18, 0x18, 0x18, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x18, 0x18, 0x18, 0x18, 
  0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x0D, 
  0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1E, 0x0F, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x0D, 
  0x19, 0x19, 0x19, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x1F, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char twelve [] PROGMEM=
{
  0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 
  0x03, 0x00, 0x00, 0x18, 0xF8, 0xF0, 0x00, 0x80, 0xF0, 0x78, 
  0xF8, 0xE0, 0x00, 0xC0, 0xF8, 0x38, 0x00, 0x00, 0x00, 0xE0, 
  0xF0, 0xB8, 0x98, 0x98, 0x98, 0x98, 0xF0, 0xE0, 0x00, 0x00, 
  0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x38, 0xF8, 
  0xE0, 0x80, 0x00, 0xC0, 0xF0, 0x78, 0x18, 0x00, 0x00, 0x00, 
  0xE0, 0xF0, 0x98, 0x98, 0x98, 0x98, 0xF8, 0xF0, 0xC0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 
  0x03, 0x00, 0x01, 0x0F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x0D, 0x0D, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x0F, 0x1E, 0x0F, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 
  0x00, 0x00, 0x00, 0x00
};

// imageWidth 128
// imageHeight 16

const unsigned char thirteen [] PROGMEM=
{
  0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 
  0x03, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 
  0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xFF, 0xFB, 0x00, 
  0x00, 0x00, 0x00, 0xF8, 0xF8, 0x38, 0x18, 0x18, 0x18, 0x08, 
  0x00, 0x08, 0xFF, 0xFF, 0xFF, 0x18, 0x18, 0x08, 0x00, 0x00, 
  0x00, 0xE0, 0xF0, 0x98, 0x98, 0x98, 0x98, 0xF8, 0xF0, 0xC0, 
  0x00, 0x00, 0x00, 0xE0, 0xF0, 0x98, 0x98, 0x98, 0x98, 0xF8, 
  0xF0, 0xC0, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x38, 0x18, 0x18, 
  0x18, 0xF8, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x0F, 0x1F, 0x18, 0x18, 0x08, 0x00, 0x00, 0x00, 0x07, 
  0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 0x00, 
  0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 
  0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char fourteen [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x03, 
  0x00, 0x00, 0x00, 0xE0, 0xF0, 0x18, 0x18, 0x18, 0x18, 0xF8, 
  0xF0, 0xC0, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 
  0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 
  0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0x18, 
  0x18, 0x18, 0x08, 0x00, 0x00, 0xC0, 0xF0, 0xF0, 0x98, 0x98, 
  0x98, 0x98, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xF0, 
  0x98, 0x98, 0x98, 0x98, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 
  0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0x0F, 0x0C, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x03, 
  0x00, 0x00, 0x00, 0x03, 0x0F, 0x0F, 0x18, 0x18, 0x08, 0x0C, 
  0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 
  0x08, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 
  0x0D, 0x0D, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0D, 0x19, 
  0x19, 0x19, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char fifteen [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x03, 
  0x00, 0x00, 0x00, 0xFB, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x18, 
  0xFE, 0xFF, 0x19, 0x19, 0x19, 0x00, 0x00, 0x18, 0xFF, 0xFF, 
  0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 
  0x98, 0x98, 0xB8, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 
  0xB8, 0x98, 0x98, 0x98, 0xB8, 0xF0, 0xE0, 0x00, 0x00, 0x00, 
  0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x18, 0x18, 
  0x18, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 
  0x19, 0x0D, 0x0C, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 
  0x19, 0x19, 0x19, 0x0D, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x1F, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char sixteen [] PROGMEM=
{
  0x00, 0x1C, 0x3E, 0x77, 0x63, 0x63, 0xE3, 0xE3, 0xE3, 0xC7, 
  0x86, 0x00, 0x00, 0x00, 0x00, 0xF3, 0xF3, 0x00, 0x00, 0x00, 
  0x00, 0x08, 0x38, 0x78, 0xE0, 0xC0, 0xE0, 0x70, 0x38, 0x18, 
  0x00, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x00, 
  0x00, 0x00, 0xE0, 0xF0, 0x98, 0x98, 0x98, 0x98, 0xF8, 0xF0, 
  0xC0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 0x98, 
  0xB8, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x18, 
  0x18, 0x18, 0x38, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 
  0x0C, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x0C, 0x0F, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x18, 
  0x1C, 0x0E, 0x07, 0x03, 0x07, 0x0F, 0x1C, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x0F, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 
  0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 
  0x0C, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char seventeen [] PROGMEM=
{
  0x00, 0x1C, 0x3E, 0x77, 0x63, 0x63, 0xE3, 0xE3, 0xE3, 0xC7, 
  0x86, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xF0, 0x98, 0x98, 0x98, 
  0x98, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x18, 0x78, 0xF0, 0xC0, 
  0x00, 0x00, 0xE0, 0xF8, 0x38, 0x00, 0x00, 0x00, 0xC0, 0xF0, 
  0xF0, 0x98, 0x98, 0x98, 0x98, 0xF0, 0xF0, 0x00, 0x00, 0x00, 
  0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF0, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x00, 
  0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 0x98, 0xB8, 0xF0, 
  0xE0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 0x98, 
  0xB8, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x18, 
  0x18, 0x18, 0x38, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 
  0x0C, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x0C, 0x0F, 0x07, 0x00, 
  0x00, 0x00, 0x01, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x0D, 
  0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1E, 0x0F, 
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0D, 
  0x19, 0x19, 0x19, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x1F, 
  0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x0F, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 
  0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 0x0C, 0x00, 
  0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 0x0D, 
  0x0C, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char eighteen [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
  0x00, 0x00, 0x00, 0x00, 0xF3, 0xF3, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF8, 0x00, 
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x38, 0x18, 0x18, 0x18, 0xF8, 
  0xF0, 0xC0, 0x00, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0x18, 0x18, 
  0x18, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 0x98, 
  0x98, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 
  0x98, 0x98, 0x98, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xF8, 
  0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x03, 0x6F, 
  0xEE, 0xD8, 0xD8, 0xC8, 0x6C, 0x7F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x00, 
  0x00, 0x00, 0x03, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x0D, 
  0x0D, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x0D, 0x19, 0x19, 
  0x19, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char nineteen [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x0F, 0x3E, 0xF8, 0xE0, 0x80, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF3, 0xF3, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 
  0xF0, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xB8, 0x98, 0x98, 
  0x98, 0xB8, 0xF0, 0xE0, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF, 
  0x18, 0x18, 0x08, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0x98, 0x98, 
  0x98, 0x98, 0xF8, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 
  0x98, 0x98, 0x98, 0x98, 0xF8, 0xF0, 0xC0, 0x00, 0x00, 0x00, 
  0xF8, 0xF8, 0x38, 0x18, 0x18, 0x18, 0xF8, 0xF0, 0xC0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x0F, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1F, 0x1F, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 
  0x00, 0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x19, 
  0x0D, 0x0C, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x1F, 0x18, 0x18, 
  0x08, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 
  0x19, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0D, 0x19, 
  0x19, 0x19, 0x19, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// imageWidth 72
// imageHeight 16

const unsigned char twenty [] PROGMEM=
{
  0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 
  0x03, 0x00, 0x00, 0x18, 0xF8, 0xF0, 0x00, 0x80, 0xF0, 0x78, 
  0xF8, 0xE0, 0x00, 0xC0, 0xF8, 0x38, 0x00, 0x00, 0x00, 0xE0, 
  0xF0, 0xB8, 0x98, 0x98, 0x98, 0x98, 0xF0, 0xE0, 0x00, 0x00, 
  0x00, 0x00, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF0, 
  0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x08, 
  0x00, 0x00, 0x18, 0x78, 0xF0, 0xC0, 0x00, 0x80, 0xE0, 0xF8, 
  0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 
  0x03, 0x00, 0x01, 0x0F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x07, 0x0F, 0x0D, 0x19, 0x19, 0x19, 0x0D, 0x0D, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x1C, 0x18, 
  0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x41, 0xFF, 0x7F, 0x1F, 
  0x03, 0x00, 0x00, 0x00
};

const unsigned char thirty [] PROGMEM=
{
  0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 
  0x03, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 
  0xF8, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xFF, 0xFB, 0x00, 
  0x00, 0x00, 0x00, 0xF8, 0xF8, 0x38, 0x18, 0x18, 0x18, 0x08, 
  0x00, 0x08, 0xFF, 0xFF, 0xFF, 0x18, 0x18, 0x08, 0x00, 0x00, 
  0x08, 0x38, 0xF8, 0xE0, 0x00, 0x00, 0xC0, 0xF8, 0x38, 0x08, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 
  0x0F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x1F, 0x18, 0x18, 0x08, 
  0x00, 0x00, 0x00, 0x00, 0x41, 0xF7, 0x7F, 0x1F, 0x07, 0x01, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char forty [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x03, 
  0x00, 0x00, 0x00, 0xE0, 0xF0, 0x18, 0x18, 0x18, 0x18, 0xF8, 
  0xF0, 0xC0, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x18, 0x18, 
  0x18, 0x08, 0x00, 0x00, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 
  0x00, 0x00, 0x08, 0x38, 0xF8, 0xE0, 0x00, 0x00, 0xC0, 0xF8, 
  0x38, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0C, 0x18, 0x18, 
  0x1C, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x18, 
  0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF7, 0x7F, 0x1F, 
  0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char fifty [] PROGMEM=
{
  0x00, 0x00, 0xFF, 0xFF, 0x63, 0x63, 0x63, 0x63, 0x63, 0x03, 
  0x00, 0x00, 0x00, 0xFB, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x18, 
  0xFE, 0xFF, 0x19, 0x19, 0x19, 0x00, 0x00, 0x18, 0xFF, 0xFF, 
  0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x38, 0xF8, 0xE0, 0x80, 
  0x00, 0xC0, 0xF0, 0x78, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0F, 0x0F, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE3, 0x7F, 0x3E, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

//imageWidth 30
//imageHeight 64

const unsigned char box0 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box1 [] PROGMEM=
{
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
};

const unsigned char box2 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box3 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box4 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box5 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box6 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box7 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box8 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char box9 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 
  0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//imageWidth 8
//imageHeight 64

const unsigned char boxcolon [] PROGMEM=
{
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF
};

const unsigned char boxcoloninverted [] PROGMEM=
{
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF
};

//imageWidth 28
//imageHeight 36

const unsigned char games [] PROGMEM=
{
  0xFC, 0xFE, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFE, 0xFC, 0xFF, 0xFF, 
  0xFF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
  0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 
  0x7F, 0x7F, 0x0F, 0x07, 0x07, 0x0F, 0x7F, 0x7F, 0x7F, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9F, 0x0F, 0x0F, 
  0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xFC, 0xFC, 
  0xE0, 0xC0, 0xC0, 0xE0, 0xFC, 0xFC, 0xFC, 0xFE, 0xFF, 0xFF, 
  0xFF, 0xF3, 0xE1, 0xE1, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x7F, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00
};


const unsigned char calendarL [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFC, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0x7F, 0x7F, 
  0x78, 0x77, 0xF7, 0x77, 0x78, 0x7F, 0x7F, 0xFF, 0x7F, 0x7F, 
  0x7F, 0x7F, 0xFF, 0x7F, 0x7F, 0x78, 0x77, 0xF7, 0x77, 0x78, 
  0x7F, 0x7F, 0xFF, 0x7F, 0x7F, 0x7F, 0xFF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFF, 0x44, 0x44, 0x44, 0x44, 0xFF, 0x44, 0x44, 
  0x44, 0x44, 0xFF, 0x44, 0x44, 0x44, 0x44, 0xFF, 0x44, 0x44, 
  0x44, 0x44, 0x7F, 0x04, 0x84, 0xC4, 0x44, 0x6F, 0x64, 0xE4, 
  0x64, 0x64, 0x4F, 0xC4, 0x84, 0x04, 0x7F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFF, 0x44, 0x44, 0x44, 0x44, 0xFF, 0x44, 0x44, 
  0x44, 0x44, 0xFF, 0x44, 0x44, 0x44, 0x44, 0xFF, 0x44, 0x44, 
  0x00, 0xF8, 0xFE, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x3E, 
  0x20, 0x20, 0x20, 0x00, 0x01, 0x23, 0xFE, 0xF8, 0x00, 0x00, 
  0x00, 0x00, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1C, 0x1C, 
  0x1C, 0x1C, 0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x1C, 0x1C, 
  0x1C, 0x18, 0x03, 0x06, 0x0C, 0x18, 0x10, 0x30, 0x30, 0x38, 
  0x30, 0x30, 0x10, 0x18, 0x0C, 0x06, 0x03, 0x00, 0x00, 0x00
};

const unsigned char calendarS [] PROGMEM=
{
  0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 
  0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 
  0xBF, 0xBF, 0xBF, 0xFF, 0xFF, 0x21, 0x21, 0x21, 0x21, 0xFF, 
  0x21, 0x21, 0x21, 0x21, 0xFF, 0x21, 0x21, 0x21, 0x21, 0xFF, 
  0x21, 0x21, 0x21, 0x21, 0xFF, 0xFF, 0xFF, 0xFF, 0x84, 0x84, 
  0x84, 0x84, 0xFF, 0x84, 0x84, 0x84, 0x84, 0xFF, 0x84, 0x84, 
  0x84, 0x84, 0xFF, 0x84, 0x84, 0x84, 0x84, 0xFF, 0xFF, 0x00, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
  0x01, 0x00
};

const unsigned char battplug [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0x03, 0x03, 
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xF3, 0xF3, 
  0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0x63, 0x63, 0x63, 0x63, 
  0x03, 0x03, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 
  0xC0, 0xC0, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xC6, 0xC6, 
  0xC6, 0xC6, 0xC0, 0xC0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char emptybatt [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0x03, 0x03, 
  0x03, 0x03, 0x03, 0x03, 0x03, 0x13, 0x33, 0x73, 0xE3, 0xC3, 
  0xC3, 0xE3, 0x73, 0x33, 0x13, 0x03, 0x03, 0x03, 0x03, 0x03, 
  0x03, 0x03, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC8, 0xCC, 0xCE, 
  0xC7, 0xC3, 0xC3, 0xC7, 0xCE, 0xCC, 0xC8, 0xC0, 0xC0, 0xC0, 
  0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char fullbatt [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0x03, 0x03, 
  0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 
  0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 
  0x03, 0x03, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 
  0xC0, 0xC0, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 
  0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 0xCF, 
  0xCF, 0xCF, 0xC0, 0xC0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//all are now 36x36

const unsigned char settime [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 
  0xE0, 0x60, 0x70, 0x30, 0x38, 0x38, 0x78, 0x78, 0x38, 0x38, 
  0x30, 0x70, 0x70, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0xFC, 0xFE, 0x8F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x80, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
  0x01, 0x03, 0x8F, 0xFE, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F, 0x7F, 0xF1, 
  0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 
  0x01, 0x81, 0x01, 0x99, 0xF9, 0xF1, 0xE0, 0xF0, 0xFD, 0xFD, 
  0xF1, 0xE7, 0xF0, 0xF8, 0x98, 0x00, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 
  0x0E, 0x0C, 0x1C, 0x1C, 0x1E, 0x0C, 0x21, 0x73, 0x3F, 0x7F, 
  0xFF, 0xFF, 0xF3, 0xE1, 0xC0, 0xC0, 0xE1, 0xF3, 0xFF, 0xFF, 
  0x7F, 0x3F, 0x73, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x03, 0x01, 0x03, 
  0x0F, 0x0F, 0x03, 0x01, 0x03, 0x07, 0x06, 0x00, 0x00, 0x00
};

const unsigned char stopwatch [] PROGMEM=
{
  0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF0, 0xC0, 0xC0, 0xC0, 0xE0, 
  0xE0, 0xE0, 0xF0, 0xF2, 0xF3, 0x73, 0x73, 0x7F, 0x7F, 0x73, 
  0x73, 0xF3, 0xF2, 0xF0, 0xE0, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 
  0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xFC, 
  0xFF, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0xFF, 0xFC, 0xF0, 
  0xE0, 0x00, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x0F, 0x7F, 
  0xFF, 0xFE, 0xF0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 
  0xFE, 0xFF, 0x7F, 0x0F, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 
  0x1F, 0x1F, 0x3E, 0x7C, 0x78, 0x78, 0xF0, 0xF0, 0xF0, 0xE0, 
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0xF0, 0x78, 0x78, 
  0x7C, 0x3E, 0x1F, 0x1F, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00
};

const unsigned char brightnesssetting [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xE0, 0xC0, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x7F, 0x3E, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x03, 0x83, 0xE0, 0xF0, 0x78, 0x3C, 
  0x1C, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1C, 0x3C, 0x78, 0xF0, 
  0xE0, 0x83, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x07, 0x07, 0x07, 0x07, 0x07, 0x02, 0x00, 
  0x00, 0x0F, 0x3F, 0x7F, 0xF0, 0xE0, 0xC0, 0x80, 0x80, 0x00, 
  0x00, 0x80, 0x00, 0x98, 0xF8, 0xF3, 0xE7, 0xF1, 0xFC, 0xFC, 
  0xF0, 0xE7, 0xF3, 0xFB, 0x9B, 0x03, 0x82, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x30, 0x38, 0x1C, 0x0E, 0x06, 0x00, 0x00, 
  0x00, 0x01, 0x01, 0x03, 0xE3, 0x80, 0x21, 0x73, 0x3F, 0x7F, 
  0xFF, 0xFF, 0xF3, 0xE1, 0xC0, 0xC0, 0xE1, 0xF3, 0xFF, 0xFF, 
  0x7F, 0x3F, 0x73, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0x07, 0x03, 0x00, 0x00, 0x06, 0x07, 0x03, 0x01, 0x03, 
  0x0F, 0x0F, 0x03, 0x01, 0x03, 0x07, 0x06, 0x00, 0x00, 0x00
};

const unsigned char brightness0 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0xE0, 0xE0, 0x70, 0x70, 0x70, 0x70, 0xE0, 0xE0, 0xC0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x70, 0xE0, 0xE0, 
  0xE0, 0xE0, 0x70, 0x7F, 0x3F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char brightness1 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 
  0xE0, 0xE0, 0x70, 0x73, 0x73, 0x70, 0xE0, 0xE0, 0xC0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x70, 0xE0, 0xE0, 
  0xE0, 0xE0, 0x70, 0x7F, 0x3F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1C, 0x0E, 0x07, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x07, 0x0E, 0x1C, 0x18, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char brightness2 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x0C, 0x00, 0xC0, 
  0xE0, 0xE0, 0x70, 0x70, 0x70, 0x70, 0xE0, 0xE0, 0xC0, 0x00, 
  0x0C, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x70, 0xE0, 0xE0, 
  0xE0, 0xE0, 0x70, 0x7F, 0x3F, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1C, 0x0E, 0x07, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x07, 0x0E, 0x1C, 0x18, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char brightness3 [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x0C, 0x00, 0xC0, 
  0xE0, 0xE0, 0x70, 0x73, 0x73, 0x70, 0xE0, 0xE0, 0xC0, 0x00, 
  0x0C, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 
  0x06, 0x06, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x70, 0xE0, 0xE0, 
  0xE0, 0xE0, 0x70, 0x7F, 0x3F, 0x0F, 0x00, 0x00, 0x06, 0x06, 
  0x06, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1C, 0x0E, 0x07, 0x03, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x07, 0x0E, 0x1C, 0x18, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char temp [] PROGMEM=
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xF8, 0xFE, 0x06, 0x03, 0x03, 0x03, 0x06, 
  0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
  0xFF, 0x00, 0xE0, 0xE0, 0xE0, 0x00, 0xFF, 0xFF, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 
  0xFF, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x20, 0x50, 0x20, 0x00, 
  0xF0, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xFE, 
  0x83, 0x01, 0x7C, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0x7C, 0x01, 
  0x83, 0xFE, 0x7C, 0x00, 0x00, 0x00, 0x1F, 0x01, 0x01, 0x01, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x06, 0x0C, 
  0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x07, 0x03, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//imageWidth 128
//imageHeight 16

const unsigned char oclock [] PROGMEM=
{
  0x00, 0xF8, 0xFC, 0x0E, 0x07, 0x03, 0x03, 0x03, 0x03, 0x07, 
  0x1E, 0xFC, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x0F, 0x03, 
  0x00, 0x00, 0x00, 0xF8, 0xFE, 0x0E, 0x03, 0x03, 0x03, 0x03, 
  0x03, 0x03, 0x06, 0x06, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 
  0x00, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x38, 
  0xF0, 0xE0, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xF0, 0x18, 0x18, 
  0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 
  0xE0, 0xF0, 0x38, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 
  0x07, 0x0F, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x0C, 0x0F, 0x07, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x07, 0x0E, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x0C, 
  0x0E, 0x06, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0x0F, 0x0E, 0x18, 0x18, 0x18, 0x0C, 0x0F, 0x07, 
  0x00, 0x00, 0x00, 0x01, 0x07, 0x0F, 0x0C, 0x18, 0x18, 0x0C, 
  0x0E, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x0F, 0x01, 0x03, 0x07, 
  0x0E, 0x1C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char its [] PROGMEM=
{
  0x00, 0x01, 0x03, 0xFF, 0xFF, 0x03, 0x01, 0x00, 0x00, 0x00, 
  0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x0C, 
  0x0F, 0x07, 0x01, 0x00, 0x00, 0x60, 0xF0, 0xF8, 0xD8, 0x98, 
  0x98, 0xB8, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x08, 0x18, 0x1F, 0x1F, 0x18, 0x08, 0x00, 
  0x00, 0x00, 0x00, 0x0F, 0x0F, 0x18, 0x18, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0C, 0x1C, 
  0x19, 0x19, 0x19, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

const unsigned char oh [] PROGMEM=
{
  0x00, 0xF8, 0xFC, 0x0E, 0x07, 0x03, 0x03, 0x03, 0x03, 0x07, 
  0x1E, 0xFC, 0xF8, 0x00, 0x00, 0x08, 0x1F, 0x07, 0x01, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x0C, 0x18, 0x18, 0x18, 
  0x18, 0x0C, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00
};

void setup()   { 

  GOFoled.init(0x3c);// initiate the screen at its address
  GOFoled.clearDisplay();

  Wire.begin();// Beginning the library functions

  RTC.begin();

  tempsensor.begin();

  //////////////
  //RTC.adjust(DateTime(__DATE__, __TIME__));// Setting the DS1307 time
  //////////////
  //**NOTE** 
  // After uploading, comment out the above line
  // and re-upload. This is very 
  // important because without it,
  // the time will reset to the original set
  // time every power cycle instead 
  // of keeping with the current time.

  pinMode(lbtn, INPUT);// set button pinmodes to input pulled high
  digitalWrite(lbtn, HIGH);
  pinMode(cbtn, INPUT);
  digitalWrite(cbtn, HIGH);
  pinMode(rbtn, INPUT);
  digitalWrite(rbtn, HIGH);

  pinMode(A7, INPUT);// sense pins and output LEDs set
  pinMode(A2, INPUT_PULLUP);
  pinMode(charge, OUTPUT);
  pinMode(full, OUTPUT);
  
  GOFoled.setRotation(2);// the screen is actually mounted upside down, so we flip it
  GOFoled.setBrightness(255);// full brightness to start
  GOFoled.drawBitmap(1, 25, walltech2 ,126, 15, WHITE);// logo and startup animation
  GOFoled.display();
  delay(1000);
  GOFoled.setCursor(52,57);
  GOFoled.print(F("v4.3"));
  GOFoled.display();
  delay(1000);
  GOFoled.clearDisplay();

  GOFoled.setCursor(38,7);
  GOFoled.print(F("John Wall"));
  GOFoled.setCursor(25,29);
  GOFoled.print(F("@walltechOSHW"));
  GOFoled.setCursor(20,50);
  GOFoled.print(F("www.walltech.cc"));
  GOFoled.display();
  delay(1000);
  GOFoled.clearDisplay();

  fadeMillis = millis();
  checkBatteryLevel();
  randomSeed(analogRead(A7));
  face = random(1,5);
}

void loop() {

  DateTime now = RTC.now();// the time variables are redefined

  timehour   = now.hour();
  timeminute = now.minute();
  timesecond = now.second();
  if (timehour > 12) timehour = timehour - 12;// comment these two ifs to convert to 24 hour time (haven't tested that)
  if (now.hour() == 0)
  {
    timehour = 12;
  }

  checkButtons();// the states of the buttons are read

  lipostat = analogRead(A2);// the charge status of the battery is measured

  checkButtons();// the button states are checked again

  if(buttonState_r == LOW){// if the right button is pressed, advance the faces by one and reset the sleep counter
    delay(100);
    face++; 
    fadeMillis = millis();
    checkBatteryLevel();
  }

  if(buttonState_c == LOW){// if the center button is pressed just reset the sleep counter
    delay(100);
    fadeMillis = millis();
    checkBatteryLevel();
  }

  if(buttonState_l == LOW){// left scroll
    delay(100);
    face--; 
    fadeMillis = millis();
    checkBatteryLevel();
  }

  if(face < 1){// loop the faces back up again
    face = facenum;
  }
  if(face > facenum){
    face = 1;
  }

  if (face == 1){// first face

    if(timehour<10)
    {
      displayNum(18,18,timehour);// print the hour's number

        if(now.second() % 2 == 0)// flash the colon once a second
      {
        GOFoled.drawBitmap(49, 23, fontcolon, 3, 21, WHITE);
      }

      else
      {
        GOFoled.drawRect(49, 23, 3, 21, BLACK);
      }

      if(timeminute<10)// add a leading zero if the minute's less than 10
      {
        displayNum(56,18,0);
        displayNum(87,18,timeminute);
      }

      else
      {
        displayNum(56,18,timeminute/10);
        displayNum(87,18,timeminute % 10);
      }
    }

    else
    {
      displayNum(0,18,timehour/10);
      displayNum(31,18,timehour % 10);

      if(now.second() % 2 == 0)
      {
        GOFoled.drawBitmap(61, 23, fontcolon, 3, 21, WHITE);
      }

      else
      {
        GOFoled.drawRect(61, 23, 3, 21, BLACK);
      }

      if(timeminute<10)
      {
        displayNum(69,18,0);
        displayNum(100,18,timeminute);
      }

      else
      {
        displayNum(69,18,timeminute/10);
        displayNum(100,18,timeminute % 10);
      }
    }

    GOFoled.setCursor(10,57);// set cursor and print the date
    GOFoled.setTextSize(1);

    if (now.dayOfWeek() == 0){
      GOFoled.print(F("Sun  "));
    }
    else if (now.dayOfWeek() == 1){
      GOFoled.print(F("Mon  "));
    }
    else if (now.dayOfWeek() == 2){
      GOFoled.print(F("Tue  "));
    }
    else if (now.dayOfWeek() == 3){
      GOFoled.print(F("Wed  "));
    }
    else if (now.dayOfWeek() == 4){
      GOFoled.print(F("Thu  "));
    }
    else if (now.dayOfWeek() == 5){
      GOFoled.print(F("Fri  "));
    }
    else if (now.dayOfWeek() == 6){
      GOFoled.print(F("Sat  "));
    }

    GOFoled.print(now.month());
    GOFoled.print(F("/"));
    GOFoled.print(now.day());
    GOFoled.print(F("/"));    
    GOFoled.print(now.year());  

    GOFoled.print(F(" "));
    GOFoled.print(percent);
    GOFoled.print(F("%"));
  }

  else if(face == 2)// printing each number of the time as the corresponding bitmap of the font
  {
    if(timehour < 10)
    {
      blindNum(25,0,timehour%10);
      blindNum(57,0,timeminute/10);
      blindNum(81,0,timeminute%10); 

      if(timesecond % 2 == 0) GOFoled.drawBitmap(48, 0, blindcolon ,8, 64, WHITE);
    }

    else
    {
      blindNum(1,0,timehour/10);
      blindNum(25,0,timehour%10);
      blindNum(72,0,timeminute/10);
      blindNum(102,0,timeminute%10); 
      if(timesecond % 2 == 0) GOFoled.drawBitmap(56, 0, blindcolon ,8, 64, WHITE);
    }
  }

  else if (face == 3)// optical illusion box font
  {
    if(timehour < 10)
    {
      displayBoxFont(15,0,timehour%10);
      displayBoxFont(53,0,timeminute/10);
      displayBoxFont(83,0,timeminute%10); 

      if(timesecond % 2 == 0) GOFoled.drawBitmap(45, 0, boxcolon ,8, 64, WHITE);

      else GOFoled.drawBitmap(45, 0, boxcoloninverted ,8, 64, WHITE);

    }

    else
    {
      displayBoxFont(0,0,timehour/10);
      displayBoxFont(30,0,timehour%10);
      displayBoxFont(68,0,timeminute/10);
      displayBoxFont(98,0,timeminute%10); 
      if(timesecond % 2 == 0) GOFoled.drawBitmap(60, 0, boxcolon ,8, 64, WHITE);

      else GOFoled.drawBitmap(60, 0, boxcoloninverted ,8, 64, WHITE);
    } 

  }

  else if(face == 4){// the bitmaps are text, same as before pretty much

    GOFoled.drawBitmap(0, 0, its, 72, 16, WHITE);

    if(timeminute == 0)
    {
      textNum(0,24,timehour);
      GOFoled.drawBitmap(0, 48, oclock, 128, 16, WHITE);
    }

    else if(timeminute > 0 && timeminute < 10)
    {
      textNum(0,24,timehour);
      GOFoled.drawBitmap(0, 48, oh, 72, 16, WHITE);
      textNum(24,48, timeminute);
    }

    else if(timeminute > 9 && timeminute < 20)
    {
      textNum(0,24,timehour);
      textNum(0,48,timeminute);
    }

    else if(timeminute >= 20 && timeminute% 10 == 0)
    {

      textNum(0,24,timehour);

      if(timeminute/10 == 2) GOFoled.drawBitmap(0, 48, twenty, 72, 16, WHITE);

      else if(timeminute/10 == 3) GOFoled.drawBitmap(0, 48, thirty, 72, 16, WHITE);

      else if(timeminute/10 == 4) GOFoled.drawBitmap(0, 48, forty, 72, 16, WHITE);

      else if(timeminute/10 == 5) GOFoled.drawBitmap(0, 48, fifty, 72, 16, WHITE);

    }

    else if(timeminute > 20 && timeminute% 10 != 0)
    {
      textNum(0,16,timehour);

      if(timeminute/10 == 2) GOFoled.drawBitmap(0, 32, twenty, 72, 16, WHITE);

      else if(timeminute/10 == 3) GOFoled.drawBitmap(0, 32, thirty, 72, 16, WHITE);

      else if(timeminute/10 == 4) GOFoled.drawBitmap(0, 32, forty, 72, 16, WHITE);

      else if(timeminute/10 == 5) GOFoled.drawBitmap(0, 32, fifty, 72, 16, WHITE);

      textNum(0,48, timeminute%10);

    }

  }

  else if(face == 5){// this stuff does the math necessary for the analog clock face

    GOFoled.drawRect( 0, 0,  128, 64, WHITE );
    GOFoled.drawFastVLine( 62, 2, 4, WHITE );
    GOFoled.drawFastVLine( 64, 2, 4, WHITE );
    GOFoled.drawFastHLine( 120, 32, 6, WHITE );
    GOFoled.drawFastVLine( 63, 58, 4, WHITE );
    GOFoled.drawFastHLine( 2, 32, 6, WHITE );

    GOFoled.drawPixel( 79, 4, WHITE );
    GOFoled.drawPixel( 113,4, WHITE);
    GOFoled.drawPixel( 113, 59, WHITE );
    GOFoled.drawPixel( 79, 59, WHITE );
    GOFoled.drawPixel( 47, 59, WHITE );
    GOFoled.drawPixel( 15, 59, WHITE );
    GOFoled.drawPixel( 15, 4, WHITE );
    GOFoled.drawPixel( 47, 4, WHITE );

    GOFoled.drawLine( 63, 32, 63 + 25 * cos( ( 270 + now.second() * 6 ) * 3.14159 / 180 ), 32 + 25 * sin( ( 270 + now.second() * 6 ) * 3.14159 / 180 ), WHITE );    

    GOFoled.drawLine( 63, 32, 63 + 20 * cos( ( 270 + now.minute() * 6 ) * 3.14159 / 180 ), 32 + 20 * sin( ( 270 + now.minute() * 6 ) * 3.14159 / 180 ), WHITE );    

    GOFoled.drawLine( 63, 32, 63 + 15 * cos( ( 270 + now.hour() % 12 * 30 + now.minute() * 0.5 ) * 3.14159 / 180 ),32 + 15 * sin( ( 270 + now.hour() % 12 * 30 + now.minute() * 0.5 ) * 3.14159 / 180 ), WHITE );    
  }

  else if(face == 6)//temperature sensor
  {
    if(A == 1) 
    {
      GOFoled.drawBitmap(46, 14, temp, 36, 36,WHITE);
      GOFoled.display();
      delay(1000);
      GOFoled.clearDisplay();
      A++;
    }

    GOFoled.setCursor(28,7);
    GOFoled.print(F("Temperature:"));
    GOFoled.setCursor(10,29);
    GOFoled.print(getTemp());
    GOFoled.print(F("F"));
    GOFoled.display();
  }

  else if(face == 7){// stopwatch logic

    if(B == 1){
      GOFoled.drawBitmap(46, 12, stopwatch, 36, 40,WHITE);
      GOFoled.display();
      delay(1000);
      GOFoled.clearDisplay();
      B++;
    }

    GOFoled.setTextSize(1);
    GOFoled.setCursor(38,57);
    GOFoled.print(F("Stopwatch"));

    GOFoled.setTextSize(2);
    GOFoled.setTextColor(WHITE);
    GOFoled.setCursor(2,25);

    // check for button press
    stopButtonState = digitalRead(cbtn);                   // read the button state and store

    if (stopButtonState == LOW && laststopButtonState == HIGH  &&  blinking == false){     // check for a high to low transition
      // if true then found a new button press while clock is not running - start the clock

      startTime = millis();                                   // store the start time
      blinking = true;                                     // turn on blinking while timing
      delay(5);                                               // short delay to debounce switch
      laststopButtonState = stopButtonState;                          // store stopButtonState in laststopButtonState, to compare next time

    }

    else if (stopButtonState == LOW && laststopButtonState == HIGH && blinking == true){     // check for a high to low transition
      // if true then found a new button press while clock is running - stop the clock and report

      elapsedTime =   millis() - startTime;              // store elapsed time
      blinking = false;                                  // turn off blinking, all done timing
      laststopButtonState = stopButtonState;                     // store stopButtonState in laststopButtonState, to compare next time
      displayStopwatch(elapsedTime);
    }

    else{
      laststopButtonState = stopButtonState;                         // store stopButtonState in laststopButtonState, to compare next time

        if(blinking == true)
      {
        runningTime = millis() - startTime; 
        displayStopwatch(runningTime);
      }

      if(blinking == false)
      {
        displayStopwatch(elapsedTime);
      }
    }
    fadeMillis = millis();
    digitalWrite(13,LOW);
  }

  else if (face == 8){// timeset

    if(C == 1){
      setminute = now.minute();
      sethour = now.hour();
      GOFoled.drawBitmap(46, 14, settime, 36, 36,WHITE);
      GOFoled.display();
      delay(1000);
      GOFoled.clearDisplay();
      C++;
    }

    checkButtons();

    GOFoled.setCursor(16,49);
    GOFoled.setTextSize(1);
    GOFoled.print(F("Hold to set time"));
    GOFoled.setCursor(57,57);
    GOFoled.print(F("|"));

    while(buttonState_c == LOW){// while the center button is held
      GOFoled.clearDisplay();
      checkButtons();
      GOFoled.setTextSize(2);
      GOFoled.setTextColor(WHITE);
      GOFoled.setCursor(20,0);
      GOFoled.println(F("Set Time"));
      GOFoled.setCursor(0,40);
      GOFoled.print(F("Min-> "));
      GOFoled.print(setminute);
      GOFoled.setCursor(0,20);
      GOFoled.print(F("Hr-> "));
      GOFoled.print(sethour);
      GOFoled.setCursor(0,57);
      GOFoled.setTextSize(1);
      GOFoled.print(F("Hour           Minute"));

      if(buttonState_r == LOW){// right advances the minutes       
        delay(100);
        setminute++; 
        if(setminute > 59){
          setminute = 0;
        } 
      }

      if(buttonState_l == LOW){// left the hours
        delay(100);
        sethour++;
        if(sethour > 24){
          sethour = 1;
        }
      }

      if(buttonState_c == HIGH){// when the center button is released, save the newly entered time
        delay(100);
        DateTime now = RTC.now();
        DateTime updated = DateTime(now.year(), now.month(), now.day(), sethour, setminute, 0);
        RTC.adjust(updated);
        RTC.begin();
        face = 1;
        break;

      }
      GOFoled.display();
      GOFoled.clearDisplay();
    }
  }

  else if(face == 9){

    if(D == 1){
      setminute = now.minute();
      sethour = now.hour();
      GOFoled.drawBitmap(46, 14, brightnesssetting, 36, 36,WHITE);
      GOFoled.display();
      delay(1000);
      GOFoled.clearDisplay();
      D++;
    }

    checkButtons();

    if(buttonState_c == LOW){
      delay(100);
      brightnessLevel++; 
      if(brightnessLevel > 4){
        brightnessLevel = 1;
      } 

    }

    if(brightnessLevel == 1){
      GOFoled.setCursor(27,56);
      GOFoled.setTextSize(1);
      GOFoled.print(F("Brightness: 1"));
      GOFoled.drawBitmap(46, 14, brightness0 ,36 , 36 ,WHITE);
      GOFoled.setBrightness(1);
    }
    else if (brightnessLevel == 2){
      GOFoled.setCursor(27,56);
      GOFoled.setTextSize(1);
      GOFoled.print(F("Brightness: 2"));
      GOFoled.drawBitmap(46, 14, brightness1 ,36 , 36 ,WHITE);
      GOFoled.setBrightness(50); 
    }
    else if (brightnessLevel == 3){
      GOFoled.setCursor(27,56);
      GOFoled.setTextSize(1);
      GOFoled.print(F("Brightness: 3"));
      GOFoled.drawBitmap(46, 14, brightness2 ,36 , 36 ,WHITE);
      GOFoled.setBrightness(150); 
    }
    else if (brightnessLevel == 4){
      GOFoled.setCursor(27,56);
      GOFoled.setTextSize(1);
      GOFoled.print(F("Brightness: 4"));
      GOFoled.drawBitmap(46, 14, brightness3 ,36 , 36 ,WHITE);
      GOFoled.setBrightness(255); 
    }

  }

  if (face != 6){// these reset variables used to display the icons when the face changes
    A = 1;
  }

  if (face != 7){
    B = 1;
    if ( (millis() - previousMillis > 500) ) {

      if (blinking == true){
        previousMillis = millis();                         // remember the last time we blinked the LED

        // if the LED is off turn it on and vice-versa.
        if (value == LOW)
          value = HIGH;
        else
          value = LOW;
        digitalWrite(13, value);
      }
    }
  }

  if (face != 8){
    C = 1;
  }

  if (face != 9){
    D = 1;
  }

  else digitalWrite(13, LOW);

  if(millis() - fadeMillis >= 10000)
  {
    GOFoled.clearDisplay(); 
  }

  ////////////////////////////////////////////////////////
  if(readVcc() > 4200)
  {
    if (lipostat < 512){// if the battery status is low, it's charging
      GOFoled.clearDisplay();
      GOFoled.setBrightness(255);
      GOFoled.drawBitmap(48, 16, battplug, 32, 32, WHITE);
      GOFoled.setCursor(48,57);
      GOFoled.print(readVcc());
      GOFoled.print(F("mV"));
      analogWrite(charge, brightness);    
      // change the brightness for next time through the loop:
      brightness = brightness + fadeAmount;
      // reverse the direction of the fading at the ends of the fade: 
      if (brightness == 0 || brightness == 100) {
        fadeAmount = -fadeAmount ; 
      }     
      digitalWrite(full, LOW);
    }

    else if(lipostat > 512)// if the battery state is high, and it's been plugged in and charging before this, show full
    {
      GOFoled.clearDisplay();
      GOFoled.setBrightness(255);
      GOFoled.drawBitmap(48, 16, fullbatt , 32, 32, WHITE);
      digitalWrite(full, HIGH);
      digitalWrite(charge, LOW);
    }
  }

  else{
    digitalWrite(charge, LOW); 
    digitalWrite(full, LOW); 
  }

  while (readVcc() <= 3200){// if the power gets so low that the DS1307 glitches, the battery is dead, battery dead animation shown
    GOFoled.setBrightness(255);
    GOFoled.clearDisplay();
    GOFoled.drawBitmap(48, 16, emptybatt, 32, 32, WHITE);
    delay(250);
  }

  ///////////////////////////////////

  GOFoled.display();
  GOFoled.clearDisplay();
}

// font displaying methods and other program methods

void textNum(int x, int y, int n)
{

  if(n == 1){
    GOFoled.drawBitmap(x, y, one, 72, 16, WHITE);
  }
  else if ( n == 2){
    GOFoled.drawBitmap(x, y, two, 72, 16, WHITE);
  }
  else if ( n == 3){
    GOFoled.drawBitmap(x, y, three, 72, 16, WHITE);
  }
  else if ( n == 4){
    GOFoled.drawBitmap(x, y, four, 72, 16, WHITE);
  }
  else if ( n == 5){
    GOFoled.drawBitmap(x, y, five, 72, 16, WHITE);
  }
  else if ( n == 6){
    GOFoled.drawBitmap(x, y, six, 72, 16, WHITE);
  }
  else if ( n == 7){
    GOFoled.drawBitmap(x, y, seven, 72, 16, WHITE);
  }
  else if ( n == 8){
    GOFoled.drawBitmap(x, y, eight, 72, 16, WHITE);
  }
  else if ( n == 9){
    GOFoled.drawBitmap(x, y, nine, 72, 16, WHITE);
  }
  else if ( n == 10){
    GOFoled.drawBitmap(x, y, ten, 72, 16, WHITE);
  }
  else if ( n == 11){
    GOFoled.drawBitmap(x, y, eleven, 72, 16, WHITE);
  }
  else if ( n == 12){
    GOFoled.drawBitmap(x, y, twelve, 72, 16, WHITE);
  }
  else if ( n == 13){
    GOFoled.drawBitmap(x, y, thirteen, 128, 16, WHITE);
  }
  else if ( n == 14){
    GOFoled.drawBitmap(x, y, fourteen, 128, 16, WHITE);
  }
  else if ( n == 15){
    GOFoled.drawBitmap(x, y, fifteen, 128, 16, WHITE);
  }
  else if ( n == 16){
    GOFoled.drawBitmap(x, y, sixteen, 128, 16, WHITE);
  }
  else if ( n == 17){
    GOFoled.drawBitmap(x, y, seventeen, 128, 16, WHITE);
  }
  else if ( n == 18){
    GOFoled.drawBitmap(x, y, eighteen, 128, 16, WHITE);
  }
  else if ( n == 19){
    GOFoled.drawBitmap(x, y, nineteen, 128, 16, WHITE);
  }
}

void displayNum(int x, int y, int n)
{
  if(n == 0)
  {
    GOFoled.drawBitmap(x, y, font0, 25, 28, WHITE);
  }

  else if(n == 1)
  {
    GOFoled.drawBitmap(x, y, font1, 25, 28, WHITE);
  }

  else if(n == 2)
  {
    GOFoled.drawBitmap(x, y, font2, 25, 28, WHITE);
  }

  else if(n == 3)
  {
    GOFoled.drawBitmap(x, y, font3, 25, 28, WHITE);
  }

  else if(n == 4)
  {
    GOFoled.drawBitmap(x, y, font4, 25, 28, WHITE);
  }

  else if(n == 5)
  {
    GOFoled.drawBitmap(x, y, font5, 25, 28, WHITE);
  }

  else if(n == 6)
  {
    GOFoled.drawBitmap(x, y, font6, 25, 28, WHITE);
  }

  else if(n == 7)
  {
    GOFoled.drawBitmap(x, y, font7, 25, 28, WHITE);
  }

  else if(n == 8)
  {
    GOFoled.drawBitmap(x, y, font8, 25, 28, WHITE);
  }

  else if(n == 9)
  {
    GOFoled.drawBitmap(x, y, font9, 25, 28, WHITE);
  }
}

void blindNum(int x, int y, int n)
{
  if(n == 0)
  {
    GOFoled.drawBitmap(x, y, blind0, 22, 64, WHITE);
  }

  else if(n == 1)
  {
    GOFoled.drawBitmap(x, y, blind1, 22, 64, WHITE);
  }

  else if(n == 2)
  {
    GOFoled.drawBitmap(x, y, blind2, 22, 64, WHITE);
  }

  else if(n == 3)
  {
    GOFoled.drawBitmap(x, y, blind3, 22, 64, WHITE);
  }

  else if(n == 4)
  {
    GOFoled.drawBitmap(x, y, blind4, 22, 64, WHITE);
  }

  else if(n == 5)
  {
    GOFoled.drawBitmap(x, y, blind5, 22, 64, WHITE);
  }

  else if(n == 6)
  {
    GOFoled.drawBitmap(x, y, blind6, 22, 64, WHITE);
  }

  else if(n == 7)
  {
    GOFoled.drawBitmap(x, y, blind7, 22, 64, WHITE);
  }

  else if(n == 8)
  {
    GOFoled.drawBitmap(x, y, blind8, 22, 64, WHITE);
  }

  else if(n == 9)
  {
    GOFoled.drawBitmap(x, y, blind9, 22, 64, WHITE);
  }
}

void displayBoxFont(int x, int y, int n)
{
  if(n == 0)
  {
    GOFoled.drawBitmap(x, y, box0, 30, 64, WHITE);
  }

  else if(n == 1)
  {
    GOFoled.drawBitmap(x, y, box1, 30, 64, WHITE);
  }

  else if(n == 2)
  {
    GOFoled.drawBitmap(x, y, box2, 30, 64, WHITE);
  }

  else if(n == 3)
  {
    GOFoled.drawBitmap(x, y, box3, 30, 64, WHITE);
  }

  else if(n == 4)
  {
    GOFoled.drawBitmap(x, y, box4, 30, 64, WHITE);
  }

  else if(n == 5)
  {
    GOFoled.drawBitmap(x, y, box5, 30, 64, WHITE);
  }

  else if(n == 6)
  {
    GOFoled.drawBitmap(x, y, box6, 30, 64, WHITE);
  }

  else if(n == 7)
  {
    GOFoled.drawBitmap(x, y, box7, 30, 64, WHITE);
  }

  else if(n == 8)
  {
    GOFoled.drawBitmap(x, y, box8, 30, 64, WHITE);
  }

  else if(n == 9)
  {
    GOFoled.drawBitmap(x, y, box9, 30, 64, WHITE);
  }
}

void displayStopwatch(long input)
{
  hours = (int)(input / 3600000L);
  minutes = (int)(input / 60000L) % 60;
  seconds = (int)(input / 1000L) % 60;

  if(hours < 10)
  {
    GOFoled.print(F("0")); 
  }

  GOFoled.print(hours); 

  GOFoled.print(F(":"));                             // print colon

  if( minutes < 10)
  {
    GOFoled.print(F("0")); 
  }

  GOFoled.print(minutes); 

  GOFoled.print(F(":"));                             // print colon

  if(seconds < 10)
  {
    GOFoled.print(F("0")); 
  }

  GOFoled.print(seconds);         

  GOFoled.print(F(":"));                             // print colon

  // use modulo operator to get fractional part of time 
  fractional = (int)(input % 1000L);
  GOFoled.setTextSize(1);
  // pad in leading zeros - wouldn't it be nice if 
  // Arduino language had a flag for this? :)
  if (fractional == 0)
    GOFoled.print(F("00"));      // add three zero's
  else if (fractional < 10)    // if fractional < 10 the 0 is ignored giving a wrong time, so add the zeros
    GOFoled.print(F("00"));       // add two zeros
  else if (fractional < 100)
    GOFoled.print(F("0"));        // add one zero
  GOFoled.print(fractional);  // print fractional part of time 
}

void checkButtons()
{
  buttonState_l = digitalRead(lbtn);
  buttonState_c = digitalRead(cbtn);
  buttonState_r = digitalRead(rbtn);
}

int readVcc() {
  long result;
  // Read 1.1V reference against AVcc
  ADMUX = _BV(REFS0) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1);
  delay(2); // Wait for Vref to settle
  ADCSRA |= _BV(ADSC); // Convert
  while (bit_is_set(ADCSRA,ADSC));
  result = ADCL;
  result |= ADCH<<8;
  result = 1126400L / result; // Back-calculate AVcc in mV
  return (int)result;
}

void checkBatteryLevel()
{
  percent = map(readVcc(), 3780, 3125, 100, 0);
  if(percent > 100) percent = 100;
}

double getTemp()
{
  f = (tempsensor.readTempC() * 9.0 / 5.0 + 32)-(double)((int)(getTemp()/0.1)%10);
  return f;
}
